{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst storedItems = localStorage.getItem(\"cartItems\");\nconst initialState = {\n  cartItems: storedItems ? JSON.parse(storedItems) : []\n};\nconst Cartsl = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addtocart: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(items => items.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += newItem.quantity;\n      } else {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image: newItem.image,\n          ds: newItem.ds,\n          price: newItem.price,\n          quantity: newItem.quantity\n        });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    deleteFromCart: (state, action) => {\n      state.cartItems = state.cartItems.filter(items => items.id !== action.payload.id);\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    updateQuantity: (state, action) => {\n      const {\n        id,\n        quantity\n      } = action.payload;\n      const itemToUpdate = state.cartItems.find(items => items.id === id);\n      if (itemToUpdate) {\n        itemToUpdate.quantity = quantity;\n      }\n      ;\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    }\n  }\n});\nexport default Cartsl.reducer;\nexport const {\n  addtocart,\n  deleteFromCart,\n  updateQuantity\n} = Cartsl.actions;","map":{"version":3,"names":["createSlice","storedItems","localStorage","getItem","initialState","cartItems","JSON","parse","Cartsl","name","reducers","addtocart","state","action","newItem","payload","existingItem","find","items","id","quantity","push","title","image","ds","price","setItem","stringify","deleteFromCart","filter","updateQuantity","itemToUpdate","reducer","actions"],"sources":["C:/Users/hp/Desktop/react-assignment/project/src/tool/Cartslice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst storedItems = localStorage.getItem(\"cartItems\");\r\nconst initialState = {\r\n    cartItems:storedItems ? JSON.parse(storedItems) :[]\r\n};\r\n\r\n\r\nconst Cartsl = createSlice({\r\n\r\nname:'cart',\r\ninitialState,\r\nreducers:{\r\n    addtocart:(state,action) =>{\r\nconst newItem = action.payload\r\nconst existingItem = state.cartItems.find((items)=>items.id === newItem.id)\r\nif(existingItem){\r\n    existingItem.quantity += newItem.quantity\r\n}else{\r\n    state.cartItems.push({\r\n        id:newItem.id,\r\n        title:newItem.title,\r\n        image:newItem.image,\r\n        ds:newItem.ds,\r\n        price:newItem.price,\r\n        quantity:newItem.quantity\r\n    });\r\n}\r\nlocalStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems))\r\n    },\r\n    deleteFromCart:(state,action)=>{\r\n        state.cartItems = state.cartItems.filter((items)=> items.id !== action.payload.id)\r\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems))\r\n    },\r\n    updateQuantity : (state,action)=>{\r\n        const{id,quantity} = action.payload\r\n        const itemToUpdate = state.cartItems.find((items)=>items.id === id)\r\n        if(itemToUpdate){\r\n            itemToUpdate.quantity = quantity\r\n        };\r\n        localStorage.setItem(\"cartItems\",JSON.stringify(state.cartItems))\r\n    }\r\n\r\n}\r\n\r\n}\r\n)\r\n\r\nexport default Cartsl.reducer;\r\nexport const{addtocart,deleteFromCart,updateQuantity} = Cartsl.actions\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AACrD,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAACJ,WAAW,GAAGK,IAAI,CAACC,KAAK,CAACN,WAAW,CAAC,GAAE;AACrD,CAAC;AAGD,MAAMO,MAAM,GAAGR,WAAW,CAAC;EAE3BS,IAAI,EAAC,MAAM;EACXL,YAAY;EACZM,QAAQ,EAAC;IACLC,SAAS,EAACA,CAACC,KAAK,EAACC,MAAM,KAAI;MAC/B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAS,CAACY,IAAI,CAAEC,KAAK,IAAGA,KAAK,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAC3E,IAAGH,YAAY,EAAC;QACZA,YAAY,CAACI,QAAQ,IAAIN,OAAO,CAACM,QAAQ;MAC7C,CAAC,MAAI;QACDR,KAAK,CAACP,SAAS,CAACgB,IAAI,CAAC;UACjBF,EAAE,EAACL,OAAO,CAACK,EAAE;UACbG,KAAK,EAACR,OAAO,CAACQ,KAAK;UACnBC,KAAK,EAACT,OAAO,CAACS,KAAK;UACnBC,EAAE,EAACV,OAAO,CAACU,EAAE;UACbC,KAAK,EAACX,OAAO,CAACW,KAAK;UACnBL,QAAQ,EAACN,OAAO,CAACM;QACrB,CAAC,CAAC;MACN;MACAlB,YAAY,CAACwB,OAAO,CAAC,WAAW,EAACpB,IAAI,CAACqB,SAAS,CAACf,KAAK,CAACP,SAAS,CAAC,CAAC;IAC7D,CAAC;IACDuB,cAAc,EAACA,CAAChB,KAAK,EAACC,MAAM,KAAG;MAC3BD,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACwB,MAAM,CAAEX,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAClFjB,YAAY,CAACwB,OAAO,CAAC,WAAW,EAACpB,IAAI,CAACqB,SAAS,CAACf,KAAK,CAACP,SAAS,CAAC,CAAC;IACrE,CAAC;IACDyB,cAAc,EAAGA,CAAClB,KAAK,EAACC,MAAM,KAAG;MAC7B,MAAK;QAACM,EAAE;QAACC;MAAQ,CAAC,GAAGP,MAAM,CAACE,OAAO;MACnC,MAAMgB,YAAY,GAAGnB,KAAK,CAACP,SAAS,CAACY,IAAI,CAAEC,KAAK,IAAGA,KAAK,CAACC,EAAE,KAAKA,EAAE,CAAC;MACnE,IAAGY,YAAY,EAAC;QACZA,YAAY,CAACX,QAAQ,GAAGA,QAAQ;MACpC;MAAC;MACDlB,YAAY,CAACwB,OAAO,CAAC,WAAW,EAACpB,IAAI,CAACqB,SAAS,CAACf,KAAK,CAACP,SAAS,CAAC,CAAC;IACrE;EAEJ;AAEA,CACA,CAAC;AAED,eAAeG,MAAM,CAACwB,OAAO;AAC7B,OAAO,MAAK;EAACrB,SAAS;EAACiB,cAAc;EAACE;AAAc,CAAC,GAAGtB,MAAM,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}